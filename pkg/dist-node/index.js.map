{"version":3,"file":"index.js","sources":["../dist-src/iron-request.js","../dist-src/iron-ajax.js"],"sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport { Polymer } from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport { Base } from '@polymer/polymer/polymer-legacy.js';\n/*\niron-request can be used to perform XMLHttpRequests.\n\n    <iron-request id=\"xhr\"></iron-request>\n    ...\n    this.$.xhr.send({url: url, body: params});\n*/\n\nPolymer({\n  is: 'iron-request',\n\n  /** @override */\n  _template: null,\n  hostAttributes: {\n    hidden: true\n  },\n  properties: {\n    /**\n     * A reference to the XMLHttpRequest instance used to generate the\n     * network request.\n     *\n     * @type {XMLHttpRequest}\n     */\n    xhr: {\n      type: Object,\n      notify: true,\n      readOnly: true,\n      value: function () {\n        return new XMLHttpRequest();\n      }\n    },\n\n    /**\n     * A reference to the parsed response body, if the `xhr` has completely\n     * resolved.\n     *\n     * @type {*}\n     * @default null\n     */\n    response: {\n      type: Object,\n      notify: true,\n      readOnly: true,\n      value: function () {\n        return null;\n      }\n    },\n\n    /**\n     * A reference to the status code, if the `xhr` has completely resolved.\n     */\n    status: {\n      type: Number,\n      notify: true,\n      readOnly: true,\n      value: 0\n    },\n\n    /**\n     * A reference to the status text, if the `xhr` has completely resolved.\n     */\n    statusText: {\n      type: String,\n      notify: true,\n      readOnly: true,\n      value: ''\n    },\n\n    /**\n     * A promise that resolves when the `xhr` response comes back, or rejects\n     * if there is an error before the `xhr` completes.\n     * The resolve callback is called with the original request as an argument.\n     * By default, the reject callback is called with an `Error` as an argument.\n     * If `rejectWithRequest` is true, the reject callback is called with an\n     * object with two keys: `request`, the original request, and `error`, the\n     * error object.\n     *\n     * @type {Promise}\n     */\n    completes: {\n      type: Object,\n      readOnly: true,\n      notify: true,\n      value: function () {\n        return new Promise(function (resolve, reject) {\n          this.resolveCompletes = resolve;\n          this.rejectCompletes = reject;\n        }.bind(this));\n      }\n    },\n\n    /**\n     * An object that contains progress information emitted by the XHR if\n     * available.\n     *\n     * @default {}\n     */\n    progress: {\n      type: Object,\n      notify: true,\n      readOnly: true,\n      value: function () {\n        return {};\n      }\n    },\n\n    /**\n     * Aborted will be true if an abort of the request is attempted.\n     */\n    aborted: {\n      type: Boolean,\n      notify: true,\n      readOnly: true,\n      value: false\n    },\n\n    /**\n     * Errored will be true if the browser fired an error event from the\n     * XHR object (mainly network errors).\n     */\n    errored: {\n      type: Boolean,\n      notify: true,\n      readOnly: true,\n      value: false\n    },\n\n    /**\n     * TimedOut will be true if the XHR threw a timeout event.\n     */\n    timedOut: {\n      type: Boolean,\n      notify: true,\n      readOnly: true,\n      value: false\n    }\n  },\n\n  /**\n   * Succeeded is true if the request succeeded. The request succeeded if it\n   * loaded without error, wasn't aborted, and the status code is ≥ 200, and\n   * < 300, or if the status code is 0.\n   *\n   * The status code 0 is accepted as a success because some schemes - e.g.\n   * file:// - don't provide status codes.\n   *\n   * @return {boolean}\n   */\n  get succeeded() {\n    if (this.errored || this.aborted || this.timedOut) {\n      return false;\n    }\n\n    var status = this.xhr.status || 0; // Note: if we are using the file:// protocol, the status code will be 0\n    // for all outcomes (successful or otherwise).\n\n    return status === 0 || status >= 200 && status < 300;\n  },\n\n  /**\n   * Sends an HTTP request to the server and returns a promise (see the\n   * `completes` property for details).\n   *\n   * The handling of the `body` parameter will vary based on the Content-Type\n   * header. See the docs for iron-ajax's `body` property for details.\n   *\n   * @param {{\n   *   url: string,\n   *   method: (string|undefined),\n   *   async: (boolean|undefined),\n   *   body:\n   * (ArrayBuffer|ArrayBufferView|Blob|Document|FormData|null|string|undefined|Object),\n   *   headers: (Object|undefined),\n   *   handleAs: (string|undefined),\n   *   jsonPrefix: (string|undefined),\n   *   withCredentials: (boolean|undefined),\n   *   timeout: (number|undefined),\n   *   rejectWithRequest: (boolean|undefined)}} options -\n   *   - url The url to which the request is sent.\n   *   - method The HTTP method to use, default is GET.\n   *   - async By default, all requests are sent asynchronously. To send\n   * synchronous requests, set to false.\n   *   -  body The content for the request body for POST method.\n   *   -  headers HTTP request headers.\n   *   -  handleAs The response type. Default is 'text'.\n   *   -  withCredentials Whether or not to send credentials on the request.\n   * Default is false.\n   *   -  timeout - Timeout for request, in milliseconds.\n   *   -  rejectWithRequest Set to true to include the request object with\n   * promise rejections.\n   * @return {Promise}\n   */\n  send: function (options) {\n    var xhr = this.xhr;\n\n    if (xhr.readyState > 0) {\n      return null;\n    }\n\n    xhr.addEventListener('progress', function (progress) {\n      this._setProgress({\n        lengthComputable: progress.lengthComputable,\n        loaded: progress.loaded,\n        total: progress.total\n      }); // Webcomponents v1 spec does not fire *-changed events when not connected\n\n\n      this.fire('iron-request-progress-changed', {\n        value: this.progress\n      });\n    }.bind(this));\n    xhr.addEventListener('error', function (error) {\n      this._setErrored(true);\n\n      this._updateStatus();\n\n      var response = options.rejectWithRequest ? {\n        error: error,\n        request: this\n      } : error;\n      this.rejectCompletes(response);\n    }.bind(this));\n    xhr.addEventListener('timeout', function (error) {\n      this._setTimedOut(true);\n\n      this._updateStatus();\n\n      var response = options.rejectWithRequest ? {\n        error: error,\n        request: this\n      } : error;\n      this.rejectCompletes(response);\n    }.bind(this));\n    xhr.addEventListener('abort', function () {\n      this._setAborted(true);\n\n      this._updateStatus();\n\n      var error = new Error('Request aborted.');\n      var response = options.rejectWithRequest ? {\n        error: error,\n        request: this\n      } : error;\n      this.rejectCompletes(response);\n    }.bind(this)); // Called after all of the above.\n\n    xhr.addEventListener('loadend', function () {\n      this._updateStatus();\n\n      this._setResponse(this.parseResponse());\n\n      if (!this.succeeded) {\n        var error = new Error('The request failed with status code: ' + this.xhr.status);\n        var response = options.rejectWithRequest ? {\n          error: error,\n          request: this\n        } : error;\n        this.rejectCompletes(response);\n        return;\n      }\n\n      this.resolveCompletes(this);\n    }.bind(this));\n    this.url = options.url;\n    var isXHRAsync = options.async !== false;\n    xhr.open(options.method || 'GET', options.url, isXHRAsync);\n    var acceptType = {\n      'json': 'application/json',\n      'text': 'text/plain',\n      'html': 'text/html',\n      'xml': 'application/xml',\n      'arraybuffer': 'application/octet-stream'\n    }[options.handleAs];\n    var headers = options.headers || Object.create(null);\n    var newHeaders = Object.create(null);\n\n    for (var key in headers) {\n      newHeaders[key.toLowerCase()] = headers[key];\n    }\n\n    headers = newHeaders;\n\n    if (acceptType && !headers['accept']) {\n      headers['accept'] = acceptType;\n    }\n\n    Object.keys(headers).forEach(function (requestHeader) {\n      if (/[A-Z]/.test(requestHeader)) {\n        Base._error('Headers must be lower case, got', requestHeader);\n      }\n\n      xhr.setRequestHeader(requestHeader, headers[requestHeader]);\n    }, this);\n\n    if (isXHRAsync) {\n      xhr.timeout = options.timeout || 0;\n      var handleAs = options.handleAs; // If a JSON prefix is present, the responseType must be 'text' or the\n      // browser won’t be able to parse the response.\n\n      if (!!options.jsonPrefix || !handleAs) {\n        handleAs = 'text';\n      } // In IE, `xhr.responseType` is an empty string when the response\n      // returns. Hence, caching it as `xhr._responseType`.\n\n\n      xhr.responseType = xhr._responseType = handleAs; // Cache the JSON prefix, if it exists.\n\n      if (!!options.jsonPrefix) {\n        xhr._jsonPrefix = options.jsonPrefix;\n      }\n    }\n\n    xhr.withCredentials = !!options.withCredentials;\n\n    var body = this._encodeBodyObject(options.body, headers['content-type']);\n\n    xhr.send(\n    /**\n       @type {ArrayBuffer|ArrayBufferView|Blob|Document|FormData|\n               null|string|undefined}\n     */\n    body);\n    return this.completes;\n  },\n\n  /**\n   * Attempts to parse the response body of the XHR. If parsing succeeds,\n   * the value returned will be deserialized based on the `responseType`\n   * set on the XHR.\n   *\n   * @return {*} The parsed response,\n   * or undefined if there was an empty response or parsing failed.\n   */\n  parseResponse: function () {\n    var xhr = this.xhr;\n    var responseType = xhr.responseType || xhr._responseType;\n    var preferResponseText = !this.xhr.responseType;\n    var prefixLen = xhr._jsonPrefix && xhr._jsonPrefix.length || 0;\n\n    try {\n      switch (responseType) {\n        case 'json':\n          // If the xhr object doesn't have a natural `xhr.responseType`,\n          // we can assume that the browser hasn't parsed the response for us,\n          // and so parsing is our responsibility. Likewise if response is\n          // undefined, as there's no way to encode undefined in JSON.\n          if (preferResponseText || xhr.response === undefined) {\n            // Try to emulate the JSON section of the response body section of\n            // the spec: https://xhr.spec.whatwg.org/#response-body\n            // That is to say, we try to parse as JSON, but if anything goes\n            // wrong return null.\n            try {\n              return JSON.parse(xhr.responseText);\n            } catch (_) {\n              console.warn('Failed to parse JSON sent from ' + xhr.responseURL);\n              return null;\n            }\n          }\n\n          return xhr.response;\n\n        case 'xml':\n          return xhr.responseXML;\n\n        case 'blob':\n        case 'document':\n        case 'arraybuffer':\n          return xhr.response;\n\n        case 'text':\n        default:\n          {\n            // If `prefixLen` is set, it implies the response should be parsed\n            // as JSON once the prefix of length `prefixLen` is stripped from\n            // it. Emulate the behavior above where null is returned on failure\n            // to parse.\n            if (prefixLen) {\n              try {\n                return JSON.parse(xhr.responseText.substring(prefixLen));\n              } catch (_) {\n                console.warn('Failed to parse JSON sent from ' + xhr.responseURL);\n                return null;\n              }\n            }\n\n            return xhr.responseText;\n          }\n      }\n    } catch (e) {\n      this.rejectCompletes(new Error('Could not parse response. ' + e.message));\n    }\n  },\n\n  /**\n   * Aborts the request.\n   */\n  abort: function () {\n    this._setAborted(true);\n\n    this.xhr.abort();\n  },\n\n  /**\n   * @param {*} body The given body of the request to try and encode.\n   * @param {?string} contentType The given content type, to infer an encoding\n   *     from.\n   * @return {*} Either the encoded body as a string, if successful,\n   *     or the unaltered body object if no encoding could be inferred.\n   */\n  _encodeBodyObject: function (body, contentType) {\n    if (typeof body == 'string') {\n      return body; // Already encoded.\n    }\n\n    var bodyObj =\n    /** @type {Object} */\n    body;\n\n    switch (contentType) {\n      case 'application/json':\n        return JSON.stringify(bodyObj);\n\n      case 'application/x-www-form-urlencoded':\n        return this._wwwFormUrlEncode(bodyObj);\n    }\n\n    return body;\n  },\n\n  /**\n   * @param {Object} object The object to encode as x-www-form-urlencoded.\n   * @return {string} .\n   */\n  _wwwFormUrlEncode: function (object) {\n    if (!object) {\n      return '';\n    }\n\n    var pieces = [];\n    Object.keys(object).forEach(function (key) {\n      // TODO(rictic): handle array values here, in a consistent way with\n      //   iron-ajax params.\n      pieces.push(this._wwwFormUrlEncodePiece(key) + '=' + this._wwwFormUrlEncodePiece(object[key]));\n    }, this);\n    return pieces.join('&');\n  },\n\n  /**\n   * @param {*} str A key or value to encode as x-www-form-urlencoded.\n   * @return {string} .\n   */\n  _wwwFormUrlEncodePiece: function (str) {\n    // Spec says to normalize newlines to \\r\\n and replace %20 spaces with +.\n    // jQuery does this as well, so this is likely to be widely compatible.\n    if (str === null || str === undefined || !str.toString) {\n      return '';\n    }\n\n    return encodeURIComponent(str.toString().replace(/\\r?\\n/g, '\\r\\n')).replace(/%20/g, '+');\n  },\n\n  /**\n   * Updates the status code and status text.\n   */\n  _updateStatus: function () {\n    this._setStatus(this.xhr.status);\n\n    this._setStatusText(this.xhr.statusText === undefined ? '' : this.xhr.statusText);\n  }\n});","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport './iron-request.js';\nimport { Polymer } from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport { Base } from '@polymer/polymer/polymer-legacy.js';\n/**\nThe `iron-ajax` element exposes network request functionality.\n\n    <iron-ajax\n        auto\n        url=\"https://www.googleapis.com/youtube/v3/search\"\n        params='{\"part\":\"snippet\", \"q\":\"polymer\", \"key\": \"YOUTUBE_API_KEY\",\n\"type\": \"video\"}' handle-as=\"json\" on-response=\"handleResponse\"\n        debounce-duration=\"300\"></iron-ajax>\n\nWith `auto` set to `true`, the element performs a request whenever\nits `url`, `params` or `body` properties are changed. Automatically generated\nrequests will be debounced in the case that multiple attributes are changed\nsequentially.\n\nNote: The `params` attribute must be double quoted JSON.\n\nYou can trigger a request explicitly by calling `generateRequest` on the\nelement.\n\n@demo demo/index.html\n*/\n\nPolymer({\n  is: 'iron-ajax',\n\n  /** @override */\n  _template: null,\n\n  /**\n   * Fired before a request is sent.\n   *\n   * @event iron-ajax-presend\n   */\n\n  /**\n   * Fired when a request is sent.\n   *\n   * @event request\n   */\n\n  /**\n   * Fired when a request is sent.\n   *\n   * @event iron-ajax-request\n   */\n\n  /**\n   * Fired when a response is received.\n   *\n   * @event response\n   */\n\n  /**\n   * Fired when a response is received.\n   *\n   * @event iron-ajax-response\n   */\n\n  /**\n   * Fired when an error is received.\n   *\n   * @event error\n   */\n\n  /**\n   * Fired when an error is received.\n   *\n   * @event iron-ajax-error\n   */\n  hostAttributes: {\n    hidden: true\n  },\n  properties: {\n    /**\n     * The URL target of the request.\n     */\n    url: {\n      type: String\n    },\n\n    /**\n     * An object that contains query parameters to be appended to the\n     * specified `url` when generating a request. If you wish to set the body\n     * content when making a POST request, you should use the `body` property\n     * instead.\n     */\n    params: {\n      type: Object,\n      value: function () {\n        return {};\n      }\n    },\n\n    /**\n     * The HTTP method to use such as 'GET', 'POST', 'PUT', or 'DELETE'.\n     * Default is 'GET'.\n     */\n    method: {\n      type: String,\n      value: 'GET'\n    },\n\n    /**\n     * HTTP request headers to send.\n     *\n     * Example:\n     *\n     *     <iron-ajax\n     *         auto\n     *         url=\"http://somesite.com\"\n     *         headers='{\"X-Requested-With\": \"XMLHttpRequest\"}'\n     *         handle-as=\"json\"></iron-ajax>\n     *\n     * Note: setting a `Content-Type` header here will override the value\n     * specified by the `contentType` property of this element.\n     */\n    headers: {\n      type: Object,\n      value: function () {\n        return {};\n      }\n    },\n\n    /**\n     * Content type to use when sending data. If the `contentType` property\n     * is set and a `Content-Type` header is specified in the `headers`\n     * property, the `headers` property value will take precedence.\n     *\n     * Varies the handling of the `body` param.\n     */\n    contentType: {\n      type: String,\n      value: null\n    },\n\n    /**\n     * Body content to send with the request, typically used with \"POST\"\n     * requests.\n     *\n     * If body is a string it will be sent unmodified.\n     *\n     * If Content-Type is set to a value listed below, then\n     * the body will be encoded accordingly.\n     *\n     *    * `content-type=\"application/json\"`\n     *      * body is encoded like `{\"foo\":\"bar baz\",\"x\":1}`\n     *    * `content-type=\"application/x-www-form-urlencoded\"`\n     *      * body is encoded like `foo=bar+baz&x=1`\n     *\n     * Otherwise the body will be passed to the browser unmodified, and it\n     * will handle any encoding (e.g. for FormData, Blob, ArrayBuffer).\n     *\n     * @type\n     * (ArrayBuffer|ArrayBufferView|Blob|Document|FormData|null|string|undefined|Object)\n     */\n    body: {\n      type: Object,\n      value: null\n    },\n\n    /**\n     * Toggle whether XHR is synchronous or asynchronous. Don't change this\n     * to true unless You Know What You Are Doing™.\n     */\n    sync: {\n      type: Boolean,\n      value: false\n    },\n\n    /**\n     * Specifies what data to store in the `response` property, and\n     * to deliver as `event.detail.response` in `response` events.\n     *\n     * One of:\n     *\n     *    `text`: uses `XHR.responseText`.\n     *\n     *    `xml`: uses `XHR.responseXML`.\n     *\n     *    `json`: uses `XHR.responseText` parsed as JSON.\n     *\n     *    `arraybuffer`: uses `XHR.response`.\n     *\n     *    `blob`: uses `XHR.response`.\n     *\n     *    `document`: uses `XHR.response`.\n     */\n    handleAs: {\n      type: String,\n      value: 'json'\n    },\n\n    /**\n     * Set the withCredentials flag on the request.\n     */\n    withCredentials: {\n      type: Boolean,\n      value: false\n    },\n\n    /**\n     * Set the timeout flag on the request.\n     */\n    timeout: {\n      type: Number,\n      value: 0\n    },\n\n    /**\n     * If true, automatically performs an Ajax request when either `url` or\n     * `params` changes.\n     */\n    auto: {\n      type: Boolean,\n      value: false\n    },\n\n    /**\n     * If true, error messages will automatically be logged to the console.\n     */\n    verbose: {\n      type: Boolean,\n      value: false\n    },\n\n    /**\n     * The most recent request made by this iron-ajax element.\n     *\n     * @type {Object|undefined}\n     */\n    lastRequest: {\n      type: Object,\n      notify: true,\n      readOnly: true\n    },\n\n    /**\n     * The `progress` property of this element's `lastRequest`.\n     *\n     * @type {Object|undefined}\n     */\n    lastProgress: {\n      type: Object,\n      notify: true,\n      readOnly: true\n    },\n\n    /**\n     * True while lastRequest is in flight.\n     */\n    loading: {\n      type: Boolean,\n      notify: true,\n      readOnly: true\n    },\n\n    /**\n     * lastRequest's response.\n     *\n     * Note that lastResponse and lastError are set when lastRequest finishes,\n     * so if loading is true, then lastResponse and lastError will correspond\n     * to the result of the previous request.\n     *\n     * The type of the response is determined by the value of `handleAs` at\n     * the time that the request was generated.\n     *\n     * @type {Object}\n     */\n    lastResponse: {\n      type: Object,\n      notify: true,\n      readOnly: true\n    },\n\n    /**\n     * lastRequest's error, if any.\n     *\n     * @type {Object}\n     */\n    lastError: {\n      type: Object,\n      notify: true,\n      readOnly: true\n    },\n\n    /**\n     * An Array of all in-flight requests originating from this iron-ajax\n     * element.\n     */\n    activeRequests: {\n      type: Array,\n      notify: true,\n      readOnly: true,\n      value: function () {\n        return [];\n      }\n    },\n\n    /**\n     * Length of time in milliseconds to debounce multiple automatically\n     * generated requests.\n     */\n    debounceDuration: {\n      type: Number,\n      value: 0,\n      notify: true\n    },\n\n    /**\n     * Prefix to be stripped from a JSON response before parsing it.\n     *\n     * In order to prevent an attack using CSRF with Array responses\n     * (http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx/)\n     * many backends will mitigate this by prefixing all JSON response bodies\n     * with a string that would be nonsensical to a JavaScript parser.\n     *\n     */\n    jsonPrefix: {\n      type: String,\n      value: ''\n    },\n\n    /**\n     * By default, iron-ajax's events do not bubble. Setting this attribute will\n     * cause its request and response events as well as its iron-ajax-request,\n     * -response,  and -error events to bubble to the window object. The vanilla\n     * error event never bubbles when using shadow dom even if this.bubbles is\n     * true because a scoped flag is not passed with it (first link) and because\n     * the shadow dom spec did not used to allow certain events, including\n     * events named error, to leak outside of shadow trees (second link).\n     * https://www.w3.org/TR/shadow-dom/#scoped-flag\n     * https://www.w3.org/TR/2015/WD-shadow-dom-20151215/#events-that-are-not-leaked-into-ancestor-trees\n     */\n    bubbles: {\n      type: Boolean,\n      value: false\n    },\n\n    /**\n     * Changes the [`completes`](iron-request#property-completes) promise chain\n     * from `generateRequest` to reject with an object\n     * containing the original request, as well an error message.\n     * If false (default), the promise rejects with an error message only.\n     */\n    rejectWithRequest: {\n      type: Boolean,\n      value: false\n    },\n    _boundHandleResponse: {\n      type: Function,\n      value: function () {\n        return this._handleResponse.bind(this);\n      }\n    }\n  },\n  observers: ['_requestOptionsChanged(url, method, params.*, headers, contentType, ' + 'body, sync, handleAs, jsonPrefix, withCredentials, timeout, auto)'],\n\n  /** @override */\n  created: function () {\n    this._boundOnProgressChanged = this._onProgressChanged.bind(this);\n  },\n\n  /**\n   * The query string that should be appended to the `url`, serialized from\n   * the current value of `params`.\n   *\n   * @return {string}\n   */\n  get queryString() {\n    var queryParts = [];\n    var param;\n    var value;\n\n    for (param in this.params) {\n      value = this.params[param];\n      param = window.encodeURIComponent(param);\n\n      if (Array.isArray(value)) {\n        for (var i = 0; i < value.length; i++) {\n          queryParts.push(param + '=' + window.encodeURIComponent(value[i]));\n        }\n      } else if (value !== null) {\n        queryParts.push(param + '=' + window.encodeURIComponent(value));\n      } else {\n        queryParts.push(param);\n      }\n    }\n\n    return queryParts.join('&');\n  },\n\n  /**\n   * The `url` with query string (if `params` are specified), suitable for\n   * providing to an `iron-request` instance.\n   *\n   * @return {string}\n   */\n  get requestUrl() {\n    var queryString = this.queryString;\n    var url = this.url || '';\n\n    if (queryString) {\n      var bindingChar = url.indexOf('?') >= 0 ? '&' : '?';\n      return url + bindingChar + queryString;\n    }\n\n    return url;\n  },\n\n  /**\n   * An object that maps header names to header values, first applying the\n   * the value of `Content-Type` and then overlaying the headers specified\n   * in the `headers` property.\n   *\n   * @return {Object}\n   */\n  get requestHeaders() {\n    var headers = {};\n    var contentType = this.contentType;\n\n    if (contentType == null && typeof this.body === 'string') {\n      contentType = 'application/x-www-form-urlencoded';\n    }\n\n    if (contentType) {\n      headers['content-type'] = contentType;\n    }\n\n    var header;\n\n    if (typeof this.headers === 'object') {\n      for (header in this.headers) {\n        headers[header] = this.headers[header].toString();\n      }\n    }\n\n    return headers;\n  },\n\n  _onProgressChanged: function (event) {\n    this._setLastProgress(event.detail.value);\n  },\n\n  /**\n   * Request options suitable for generating an `iron-request` instance based\n   * on the current state of the `iron-ajax` instance's properties.\n   *\n   * @return {{\n   *   url: string,\n   *   method: (string|undefined),\n   *   async: (boolean|undefined),\n   *   body:\n   * (ArrayBuffer|ArrayBufferView|Blob|Document|FormData|null|string|undefined|Object),\n   *   headers: (Object|undefined),\n   *   handleAs: (string|undefined),\n   *   jsonPrefix: (string|undefined),\n   *   withCredentials: (boolean|undefined)}}\n   */\n  toRequestOptions: function () {\n    return {\n      url: this.requestUrl || '',\n      method: this.method,\n      headers: this.requestHeaders,\n      body: this.body,\n      async: !this.sync,\n      handleAs: this.handleAs,\n      jsonPrefix: this.jsonPrefix,\n      withCredentials: this.withCredentials,\n      timeout: this.timeout,\n      rejectWithRequest: this.rejectWithRequest\n    };\n  },\n\n  /**\n   * Performs an AJAX request to the specified URL.\n   *\n   * @return {!IronRequestElement}\n   */\n  generateRequest: function () {\n    var request =\n    /** @type {!IronRequestElement} */\n    document.createElement('iron-request');\n    var requestOptions = this.toRequestOptions();\n    this.push('activeRequests', request);\n    request.completes.then(this._boundHandleResponse).catch(this._handleError.bind(this, request)).then(this._discardRequest.bind(this, request));\n    var evt = this.fire('iron-ajax-presend', {\n      request: request,\n      options: requestOptions\n    }, {\n      bubbles: this.bubbles,\n      cancelable: true\n    });\n\n    if (evt.defaultPrevented) {\n      request.abort();\n      request.rejectCompletes(request);\n      return request;\n    }\n\n    if (this.lastRequest) {\n      this.lastRequest.removeEventListener('iron-request-progress-changed', this._boundOnProgressChanged);\n    }\n\n    request.addEventListener('iron-request-progress-changed', this._boundOnProgressChanged);\n    request.send(requestOptions);\n\n    this._setLastProgress(null);\n\n    this._setLastRequest(request);\n\n    this._setLoading(true);\n\n    this.fire('request', {\n      request: request,\n      options: requestOptions\n    }, {\n      bubbles: this.bubbles,\n      composed: true\n    });\n    this.fire('iron-ajax-request', {\n      request: request,\n      options: requestOptions\n    }, {\n      bubbles: this.bubbles,\n      composed: true\n    });\n    return request;\n  },\n  _handleResponse: function (request) {\n    if (request === this.lastRequest) {\n      this._setLastResponse(request.response);\n\n      this._setLastError(null);\n\n      this._setLoading(false);\n    }\n\n    this.fire('response', request, {\n      bubbles: this.bubbles,\n      composed: true\n    });\n    this.fire('iron-ajax-response', request, {\n      bubbles: this.bubbles,\n      composed: true\n    });\n  },\n  _handleError: function (request, error) {\n    if (this.verbose) {\n      Base._error(error);\n    }\n\n    if (request === this.lastRequest) {\n      this._setLastError({\n        request: request,\n        error: error,\n        status: request.xhr.status,\n        statusText: request.xhr.statusText,\n        response: request.xhr.response\n      });\n\n      this._setLastResponse(null);\n\n      this._setLoading(false);\n    } // Tests fail if this goes after the normal this.fire('error', ...)\n\n\n    this.fire('iron-ajax-error', {\n      request: request,\n      error: error\n    }, {\n      bubbles: this.bubbles,\n      composed: true\n    });\n    this.fire('error', {\n      request: request,\n      error: error\n    }, {\n      bubbles: this.bubbles,\n      composed: true\n    });\n  },\n  _discardRequest: function (request) {\n    var requestIndex = this.activeRequests.indexOf(request);\n\n    if (requestIndex > -1) {\n      this.splice('activeRequests', requestIndex, 1);\n    }\n  },\n  _requestOptionsChanged: function () {\n    this.debounce('generate-request', function () {\n      if (this.url == null) {\n        return;\n      }\n\n      if (this.auto) {\n        this.generateRequest();\n      }\n    }, this.debounceDuration);\n  }\n});"],"names":["Polymer","is","_template","hostAttributes","hidden","properties","xhr","type","Object","notify","readOnly","value","XMLHttpRequest","response","status","Number","statusText","String","completes","Promise","resolve","reject","resolveCompletes","rejectCompletes","bind","progress","aborted","Boolean","errored","timedOut","succeeded","send","options","readyState","addEventListener","_setProgress","lengthComputable","loaded","total","fire","error","_setErrored","_updateStatus","rejectWithRequest","request","_setTimedOut","_setAborted","Error","_setResponse","parseResponse","url","isXHRAsync","async","open","method","acceptType","handleAs","headers","create","newHeaders","key","toLowerCase","keys","forEach","requestHeader","test","Base","_error","setRequestHeader","timeout","jsonPrefix","responseType","_responseType","_jsonPrefix","withCredentials","body","_encodeBodyObject","preferResponseText","prefixLen","length","undefined","JSON","parse","responseText","_","console","warn","responseURL","responseXML","substring","e","message","abort","contentType","bodyObj","stringify","_wwwFormUrlEncode","object","pieces","push","_wwwFormUrlEncodePiece","join","str","toString","encodeURIComponent","replace","_setStatus","_setStatusText","params","sync","auto","verbose","lastRequest","lastProgress","loading","lastResponse","lastError","activeRequests","Array","debounceDuration","bubbles","_boundHandleResponse","Function","_handleResponse","observers","created","_boundOnProgressChanged","_onProgressChanged","queryString","queryParts","param","window","isArray","i","requestUrl","bindingChar","indexOf","requestHeaders","header","event","_setLastProgress","detail","toRequestOptions","generateRequest","document","createElement","requestOptions","then","catch","_handleError","_discardRequest","evt","cancelable","defaultPrevented","removeEventListener","_setLastRequest","_setLoading","composed","_setLastResponse","_setLastError","requestIndex","splice","_requestOptionsChanged","debounce"],"mappings":"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"}